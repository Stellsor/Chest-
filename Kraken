



function FLY()
    local User = game:GetService("UserInputService")
    local player = game:GetService("Players").LocalPlayer
    local GuiService = game:GetService("StarterGui")
    local mouse = game.Players.LocalPlayer:GetMouse()
    
    local holdingWKey = false
    local holdingSKey = false
    local holdingAKey = false
    local holdingDKey = false
    local holdingSpaceKey = false
    local holdingControlKey = false
    
    Speed_1 = -0.35
    
    mouse.KeyDown:connect(function(key)
       if key == "x" then
           if startup  == true then
               startup = false
               GuiService:SetCore("SendNotification", {Title = "Speed", Text = "Speed is now disabled";})
           else
               startup = true
               GuiService:SetCore("SendNotification", {Title = "Speed", Text = "Speed is now enabled";})
               
               local brick = Instance.new("Part", workspace)
               brick.Size = Vector3.new(3, 2, 3)
               brick.CFrame = player.Character.HumanoidRootPart.CFrame + Vector3.new(0, -5, 0)
               brick.Transparency = 1
               brick.Anchored = true
               brick.Name = "Brick"
               mouse.KeyDown:connect(function(key)
                   if key == "x" then
                       brick:remove()
                   end
               end)
               for i = 1, math.huge do
                   brick.CFrame = player.Character.HumanoidRootPart.CFrame + Vector3.new(0, -4, 0)
                   wait(0)
               end
           end
       end
    end)
    
    game:GetService('RunService').Stepped:connect(function()
       if startup then
           if WHeld == true then
             player.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,Speed_1)
    
           end
       end
    end)
    
    game:GetService('RunService').Stepped:connect(function()
       if startup then
       if SHeld == true then
            player.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.new(0,0,-Speed_1)
       end
       end
    end)
    
    game:GetService('RunService').Stepped:connect(function()
       if startup then
       if AHeld == true then
       player.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.new(Speed_1,0,0)
       end
       end
    end)
    
    
    game:GetService('RunService').Stepped:connect(function()
       if startup then
       if DHeld == true then
       player.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.new(-Speed_1,0,0)
       end
       end
    end)
    
    
    game:GetService('RunService').Stepped:connect(function()
       if startup then
       if SpaceHeld == true then
        player.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.new(0,-Speed_1,0)
       end
       end
    end)
    
    game:GetService('RunService').Stepped:connect(function()
       if startup then
        if ControlHeld == true then
        player.Character.HumanoidRootPart.CFrame = player.Character.HumanoidRootPart.CFrame * CFrame.new(0,Speed_1,0)
           end
       end
    
    end)
    
    User.InputBegan:Connect(function(inputObject)
       if(inputObject.KeyCode==Enum.KeyCode.W) then
           holdingWKey = true WHeld = true
       end
       
       if(inputObject.KeyCode==Enum.KeyCode.S) then
           holdingSKey = true SHeld = true
       end
    
       if(inputObject.KeyCode==Enum.KeyCode.A) then
           holdingAKey = true AHeld = true
       end
    
       if(inputObject.KeyCode==Enum.KeyCode.D) then
           holdingDKey = true DHeld = true
       end
       if(inputObject.KeyCode==Enum.KeyCode.LeftControl) then
           holdingControlKey = true ControlHeld = true
       end
    
       if(inputObject.KeyCode==Enum.KeyCode.Space) then
           holdingSpaceKey = true SpaceHeld= true
       end
    
       if(inputObject.KeyCode==Enum.KeyCode.W) then
           holdingUKey = true WHeld = true
       end
    end)
    
    User.InputEnded:Connect(function(inputObject)
       if(inputObject.KeyCode==Enum.KeyCode.W) then
           holdingWKey = false WHeld = false
       end
    
       if(inputObject.KeyCode==Enum.KeyCode.S) then
           holdingSKey = false SHeld = false    
       end
    
       if(inputObject.KeyCode==Enum.KeyCode.A) then
           holdingAKey = false AHeld = false    
       end
    
       if(inputObject.KeyCode==Enum.KeyCode.D) then
           holdingDKey = false DHeld = false    
       end
    
       if(inputObject.KeyCode==Enum.KeyCode.LeftControl) then
           holdingShiftKey = false ControlHeld = false    
       end
    
       if(inputObject.KeyCode==Enum.KeyCode.Space) then
           holdingSpaceKey = false SpaceHeld = false
       end
    end)
end






function Bypass()
local humanoid = game:GetService("Players").LocalPlayer.Character.Humanoid
local check
check = hookmetamethod(game,"__index",function(t, k)
   if t == humanoid  and k == "WalkSpeed" then
       return 16
   end
   return check(t,k)
end)

if pebc_execute then
    getgenv().hookfunction = function(...)
        detour_function(...)
    end
end
newclosure = newcclosure or protect_function
sro = setreadonly or make_writeable
mt = getrawmetatable(game)
sro(mt,false)
old = mt.__newindex
mt.__newindex = newclosure(function(a,b,c)
    if b:lower() == "walkspeed" and c < 30 then
        return 
    end
    return old(a,b,c)
end)

local humanoid = game:GetService("Players").LocalPlayer.Character.Humanoid
local check
check = hookmetamethod(game,"__index",function(t, k)
   if t == humanoid  and k == "JumpPower" then
       return 50
   end
   return check(t,k)
end)
end












local WalkSpeed = 16
local JumpPower = 50
_G.Speed = 50

local plr = game.Players.LocalPlayer.Character

getgenv().SecureMode = true
local Rayfield = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Rayfield/main/source'))()
local Bypass = Bypass()

local Window = Rayfield:CreateWindow({
	Name = "Kraken Services",
	LoadingTitle = "Kraken Services Loading...",
	LoadingSubtitle = "By Efial#6847",
	ConfigurationSaving = {
		Enabled = false,
		FolderName = nil, -- Create a custom folder for your hub/game
		FileName = "Big Hub"
	},
        Discord = {
        	Enabled = false,
        	Invite = "", -- The Discord invite code, do not include discord.gg/
        	RememberJoins = false -- Set this to false to make them join the discord every time they load it up
        },
	KeySystem = false, -- Set this to true to use our key system
	KeySettings = {
		Title = "Sirius Hub",
		Subtitle = "Key System",
		Note = "Join the discord (discord.gg/sirius)",
		FileName = "SiriusKey",
		SaveKey = true,
		GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
		Key = "Hello"
	}
})


local Tab = Window:CreateTab("Main", 4483362458) -- Title, Image

local Section = Tab:CreateSection("WalkSpeed")

local Toggle = Tab:CreateToggle({
	Name = "Toggle WalkSpeed",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
		if Value == true then
            while Value == true do
                plr:WaitForChild("Humanoid").WalkSpeed = WalkSpeed
                task.wait()
            end
        elseif Value == false then
            while Value == false do
                plr:WaitForChild("Humanoid").WalkSpeed = 16
                task.wait()
            end
        end
	end,
})

local Slider = Tab:CreateSlider({
	Name = "Walk Speed",
	Range = {16, 80},
	Increment = 0.1,
	Suffix = "WalkSpeed",
	CurrentValue = 16,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
        while true do
		    WalkSpeed = Value
            task.wait()
        end
	end,
})


local Section = Tab:CreateSection("Jump Power")

local Toggle = Tab:CreateToggle({
	Name = "Toggle JumpPower",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
        if Value == true then
            Jump = game:GetService"RunService".Stepped:Connect(function() 
                plr:WaitForChild("Humanoid").JumpPower = JumpPower
            end)
        elseif Value == false then
            Jump:Disconnect()
        end
	end,
})

local Slider = Tab:CreateSlider({
	Name = "Jump Power",
	Range = {50, 90},
	Increment = 0.1,
	Suffix = "JumpPower",
	CurrentValue = 50,
	Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
        while true do
		    JumpPower = Value
            task.wait()
        end
	end,
})



local Tab2 = Window:CreateTab("ESP", 4483362458) -- Title, Image

local Section = Tab2:CreateSection("Chest ESP")

local Toggle = Tab2:CreateToggle({
	Name = "Legendary Chest ESP",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
       if Value == true then
        for __,v in pairs(game.Players.LocalPlayer.PlayerScripts.Shop.Chests:GetDescendants()) do -- the path
            if v.Name == "Legendary" then
              local a = Instance.new("BillboardGui",v) -- pretty much explains everything
              a.Name = "ElectricPPPGUI"
              a.Size = UDim2.new(10,0, 10,0)
              a.AlwaysOnTop = true
              local b = Instance.new("Frame",a)
              b.Size = UDim2.new(1,0, 1,0)
              b.BackgroundTransparency = 1
              b.BorderSizePixel = 0
              b.BackgroundColor3 = Color3.new(0, 255, 0)
              local c = Instance.new('TextLabel',b)
              c.Size = UDim2.new(2,0,2,0)
              c.BorderSizePixel = 0
              c.TextSize = 10
              c.TextColor3 = Color3.fromRGB(255,255,255)
              c.Text = "Legendary Chest"
              c.BackgroundTransparency = 1
              c.Font = "Ubuntu"
              local d = Instance.new("Highlight", v)
              d.FillColor = Color3.fromRGB(225, 225, 0)
              d.OutlineColor = Color3.fromRGB(255, 255, 0)
            end
        end
       elseif Value == false then
            game.Players.LocalPlayer.PlayerScripts.Shop.Chests.Legendary.ElectricPPPGUI:Remove()
            game.Players.LocalPlayer.PlayerScripts.Shop.Chests.Legendary.Highlight:Remove()
       end
	end,
})

local Toggle = Tab2:CreateToggle({
	Name = "Rare Chest ESP",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
       if Value == true then
        for __,v in pairs(game.Players.LocalPlayer.PlayerScripts.Shop.Chests:GetDescendants()) do -- the path
            if v.Name == "Rare" then
              local a = Instance.new("BillboardGui",v) -- pretty much explains everything
              a.Name = "ElectricPPPGUI"
              a.Size = UDim2.new(10,0, 10,0)
              a.AlwaysOnTop = true
              local b = Instance.new("Frame",a)
              b.Size = UDim2.new(1,0, 1,0)
              b.BackgroundTransparency = 1
              b.BorderSizePixel = 0
              b.BackgroundColor3 = Color3.new(0, 255, 0)
              local c = Instance.new('TextLabel',b)
              c.Size = UDim2.new(2,0,2,0)
              c.BorderSizePixel = 0
              c.TextSize = 10
              c.TextColor3 = Color3.fromRGB(255,255,255)
              c.Text = "Rare Chest"
              c.BackgroundTransparency = 1
              c.Font = "Ubuntu"
              local d = Instance.new("Highlight", v)
              d.FillColor = Color3.fromRGB(0, 125, 198)
              d.OutlineColor = Color3.fromRGB(0, 162, 255)
            end
        end
       elseif Value == false then
            game.Players.LocalPlayer.PlayerScripts.Shop.Chests.Rare.ElectricPPPGUI:Remove()
            game.Players.LocalPlayer.PlayerScripts.Shop.Chests.Rare.Highlight:Remove()
       end
	end,
})




local Tab3 = Window:CreateTab("Misc", 4483362458) -- Title, Image

local Section = Tab3:CreateSection("Misc ( DONT LOAD ANYTHING IN HERE WHILE IN LOBBY WAIT TILL LANDED )")

local Toggle = Tab3:CreateToggle({
	Name = "No Stun",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
        if Value == true then
            NoStun = game:GetService"RunService".Stepped:Connect(function() 
                if game.Players.LocalPlayer.Character:WaitForChild("Stun") then
                    game.Players.LocalPlayer.Character.Stun:Remove()
                    wait(.1)
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 2, 10)
                end
            end)
        elseif Value == false then
            NoStun:Disconnect()
        end
	end,
})

local Toggle = Tab3:CreateToggle({
	Name = "No Drown",
	CurrentValue = false,
	Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
	Callback = function(Value)
        if Value == true then
            NoDrown = game:GetService"RunService".Stepped:Connect(function() 
                if game.Players.LocalPlayer.Character.HumanoidRootPart:WaitForChild("SwimPosition") then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.SwimPosition.Position = Vector3.new(0, -2.71834, 0)
                end
            end)
        elseif Value == false then
            NoDrown:Disconnect()
        end
	end,
})

local Button = Tab3:CreateButton({
	Name = "No Fall Damage",
	Callback = function()
		if game.Players.LocalPlayer.Character:WaitForChild("FallDamage")then game.Players.LocalPlayer.Character.FallDamage:Remove()end -- No Fall Damage
	end,
})

local Button = Tab3:CreateButton({
	Name = "Hitbox Extender",
	Callback = function()
		local a=getrenv()._G.hitbox.start;getrenv()._G.hitbox.start=function(...)local b={...}b[3]=Vector3.new(30,30,30)return a(unpack(b))end -- Hitbox
	end,
})

local Button = Tab3:CreateButton({
	Name = "Dash No Stamina",
	Callback = function()
		local a;a=hookmetamethod(game,"__namecall",function(...)local b=...if tostring(b)=="takestam"then return nil end;return a(...)end) -- Stamina
	end,
})

local Section = Tab3:CreateSection("God Mode")

local Button = Tab3:CreateButton({
	Name = "God Mode (Can't Turn Off Or Hit)",
	Callback = function()
        altHumanoid=game:GetService("Players").LocalPlayer.Character.Humanoid:Clone()altHumanoid.Parent=nil;standardHumanoid=game:GetService("Players").LocalPlayer.Character.Humanoid;standardHumanoid.Name="x"altHumanoid.Parent=game:GetService("Players").LocalPlayer.Character;altHumanoid.Name="Humanoid"wait(0.1)standardHumanoid.Parent=nil;game.Workspace.CurrentCamera.CameraSubject=game:GetService("Players").LocalPlayer.Character;game:GetService("Players").LocalPlayer.Character.Animate.Disabled=true;wait(0.1)game:GetService("Players").LocalPlayer.Character.Animate.Disabled=false;altHumanoid.DisplayDistanceType="None"wait(0.1)altHumanoid.Name="x"standardHumanoid.Parent=game:GetService("Players").LocalPlayer.Character;standardHumanoid.Name="Humanoid"wait(0.1)altHumanoid.Parent=nil;game.Workspace.CurrentCamera.CameraSubject=game:GetService("Players").LocalPlayer.Character;game:GetService("Players").LocalPlayer.Character.Animate.Disabled=true;wait(0.1)game:GetService("Players").LocalPlayer.Character.Animate.Disabled=false;standardHumanoid.DisplayDistanceType="None"
        Clone.MaxHealth = math.huge
        Clone.Health = math.huge
        game.Players.LocalPlayer:WaitForChild("PlayerGui").HUD.Health.HealthBar.TextLabel.Text = "INF / INF"
        game.Players.LocalPlayer:WaitForChild("PlayerGui").HUD.Health.HealthBar.TextLabel.shadow.Text = "INF / INF"
        game.Players.LocalPlayer.Character.Animate.Disabled = true
	end,
})
